<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wowking</title>
    <description>I don&#39;t really know where I&#39;m going, but I hope I go far.</description>
    <link>https://wowkingah.github.io/</link>
    <atom:link href="https://wowkingah.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 01 Sep 2017 17:26:27 +0800</pubDate>
    <lastBuildDate>Fri, 01 Sep 2017 17:26:27 +0800</lastBuildDate>
    <generator>Jekyll v3.1.1</generator>
    
      <item>
        <title>Oracle 超过最大进程数</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;简述&lt;/h3&gt;
&lt;p&gt;Oracle超过最大进程数。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;报错&lt;/h3&gt;
&lt;p&gt;#### 客户端连接报错&lt;br /&gt;
ORA-12519: TNS:no appropriate service handler found&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;命令行连接报错&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shell
SQL&amp;gt; conn /as sysdba;  
ERROR:  
ORA-00020: maximum number of processes (150) exceeded  
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;解决方案&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;1.重启或停止问题客户端（如问题Tomcat/Nginx），释放几个空闲连接；
2.查看当前进程数；
```shell
SQL&amp;gt; select count(1) from v$process;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;count1&quot;&gt;COUNT(1)&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   147   ``` &amp;gt; 3.查看最大进程数； ```shell SQL&amp;gt; select value from v$parameter where name = &#39;processes&#39;;  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;value&quot;&gt;VALUE&lt;/h2&gt;
&lt;p&gt;150&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;
&amp;gt; 4.修改最大进程数；
&lt;/code&gt;shell
SQL&amp;gt; alter system set processes = 512 scope = spfile;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;
&amp;gt; 5.重启数据库。  
&lt;/code&gt;shell
SQL&amp;gt; conn /as sysdba;&lt;br /&gt;
SQL&amp;gt; shutdown immediate;&lt;br /&gt;
SQL&amp;gt; startup;&lt;br /&gt;
```&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Sep 2017 00:00:00 +0800</pubDate>
        <link>https://wowkingah.github.io/2017/09/oracle_maximum_number_of_processes/</link>
        <guid isPermaLink="true">https://wowkingah.github.io/2017/09/oracle_maximum_number_of_processes/</guid>
        
        <category>Oracle</category>
        
        
      </item>
    
      <item>
        <title>MySQL INSERT条件判断</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;简述&lt;/h3&gt;
&lt;p&gt;INSERT条件判断：如果不存在则插入。REPLACE判断：如果存在则替换。&lt;br /&gt;
对于普通的 INSERT 插入，如果想要保证不插入重复记录，可以通过唯一索引实现。&lt;br /&gt;
那有没有不创建唯一索引，仅通过 INSERT 一条语句实现的方案呢？ INSERT INTO IF EXISTS就来了。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;语法&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sql
INSERT INTO t_name(c1, c2, cn) SELECT &#39;v1&#39;, &#39;v2&#39;, &#39;vn&#39; FROM DUAL WHERE NOT EXISTS(SELECT c1 FROM t_name WHERE c1 = ?);
&lt;/code&gt;
&lt;em&gt;tips: DUAL 为临时表，无需创建。&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;示例&lt;/h3&gt;
&lt;p&gt;#### 环境&lt;br /&gt;
```shell
mysql&amp;gt; DROP TABLE IF EXISTS t1;
Query OK, 0 rows affected (0.20 sec)&lt;/p&gt;

&lt;p&gt;mysql&amp;gt; CREATE TABLE &lt;code class=&quot;highlighter-rouge&quot;&gt;t1&lt;/code&gt; (
    -&amp;gt;   &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt; int(11) unsigned NOT NULL AUTO_INCREMENT,
    -&amp;gt;   &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; varchar(8) NULL,
    -&amp;gt;   PRIMARY KEY (&lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt;)
    -&amp;gt; );
Query OK, 0 rows affected (0.78 sec)&lt;/p&gt;

&lt;p&gt;mysql&amp;gt; INSERT INTO t1(name) VALUES (‘aa’),(‘bb’);
Query OK, 2 rows affected (0.06 sec)
Records: 2  Duplicates: 0  Warnings: 0&lt;/p&gt;

&lt;p&gt;mysql&amp;gt; SELECT * FROM t1;
+—-+——+
| id | name |
+—-+——+
|  1 | aa   |
|  2 | bb   |
+—-+——+
2 rows in set (0.00 sec)
```&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;测试&lt;/h4&gt;
&lt;p&gt;```sql
mysql&amp;gt; INSERT INTO t1(name) VALUES(‘aa’);
Query OK, 1 row affected (0.08 sec)&lt;/p&gt;

&lt;p&gt;mysql&amp;gt; SELECT * FROM t1;
+—-+——+
| id | name |
+—-+——+
|  1 | aa   |
|  2 | bb   |
|  3 | aa   |
+—-+——+
3 rows in set (0.00 sec)
```
&lt;em&gt;tips: 因name列无唯一索引，故aa可以插入。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;```sql
mysql&amp;gt; INSERT INTO t1(name) SELECT ‘bb’ FROM DUAL WHERE NOT EXISTS(SELECT name FROM t1 WHERE name=’bb’);
Query OK, 0 rows affected (0.00 sec)
Records: 0  Duplicates: 0  Warnings: 0&lt;/p&gt;

&lt;p&gt;mysql&amp;gt; SELECT * FROM t1;
+—-+——+
| id | name |
+—-+——+
|  1 | aa   |
|  2 | bb   |
|  3 | aa   |
+—-+——+
3 rows in set (0.00 sec)
```
&lt;em&gt;tips: bb未插入。&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;reference&quot;&gt;reference&lt;/h3&gt;
&lt;p&gt;https://my.oschina.net/jsan/blog/270161/&lt;/p&gt;
</description>
        <pubDate>Tue, 08 Aug 2017 00:00:00 +0800</pubDate>
        <link>https://wowkingah.github.io/2017/08/mysql_insert_condition/</link>
        <guid isPermaLink="true">https://wowkingah.github.io/2017/08/mysql_insert_condition/</guid>
        
        <category>MySQL</category>
        
        
      </item>
    
      <item>
        <title>Redis性能测试</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;简述&lt;/h3&gt;
&lt;p&gt;简单压一把Redis在VM和Docker下性能如何。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;环境&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;VM&lt;/strong&gt;&lt;br /&gt;
CPU: 2C&lt;br /&gt;
Mem: 2G&lt;br /&gt;
OS: CentOS release 6.7 (Final)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;br /&gt;
CPU: 2C&lt;br /&gt;
Mem: 2G&lt;br /&gt;
OS: CentOS release 6.9 (Final)&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;测试基准值&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;tools: redis-benchmark&lt;/li&gt;
    &lt;li&gt;type: SET、GET&lt;/li&gt;
    &lt;li&gt;requests: 5000000&lt;/li&gt;
    &lt;li&gt;keyspacelen: 500000&lt;/li&gt;
    &lt;li&gt;size: 2(default)&lt;/li&gt;
    &lt;li&gt;parallel: 8 ~ 4096&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;section-3&quot;&gt;测试结果&lt;/h3&gt;
&lt;p&gt;#### SET&lt;br /&gt;
&lt;img src=&quot;/images/posts/dba/redis_performance_test/qps_set.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;get&quot;&gt;GET&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/images/posts/dba/redis_performance_test/qps_get.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;测试结论&lt;/h3&gt;
&lt;p&gt;由于Docker很多内核参数不能调整，该测试结果建立在环境尽量一致的前提下。&lt;br /&gt;
从上图测试结果看，并发数小于256时，VM读写QPS要高于Docker；并发数大于512后，Docker读写QPS要高于VM。&lt;/p&gt;

&lt;h3 id=&quot;section-5&quot;&gt;其它&lt;/h3&gt;
&lt;p&gt;-P: 使用管道，默认值”1”。
Redis是一种基于客户端-服务端模型以及请求响应协议的TCP服务。这意味着通常情况下一个请求会遵循以下步骤：&lt;br /&gt;
&amp;gt;* 客户端向服务端发送一个查询请求，并监听Socket返回，通常是以阻塞模式，等待服务端响应。&lt;br /&gt;
&amp;gt;* 服务端处理命令，并将结果返回给客户端。&lt;/p&gt;

&lt;p&gt;Redis管道技术可以在服务端未响应时，客户端可以继续向服务端发送请求，并最终一次性读取所有服务端的响应。管道技术最显著的优势是提高了redis服务的性能。&lt;/p&gt;

&lt;p&gt;-r：不是request，而是random。后面跟的一个正整数M的含义是：0 ~ M之间的一个随机数，例如：-r 10，意思是随机0~9之间的一个数字。&lt;/p&gt;

&lt;p&gt;PING_INLINE和PING_BULK&lt;br /&gt;
在统一请求协议之前，Redis使用一个不同的协议来发送命令，这个协议仍然被支持因为通过telnet它很容易手写。在这个协议中存在两种命令：&lt;br /&gt;
&amp;gt; 1. ?inline命令:命令很简单，就是用空格把参数分隔开来的字符串。二进制安全是不可能的。
&amp;gt; 2. ?bulk命令: bulk命令和inline命令几乎是一样的，但是最后一个参数为了能够接受二进制安全的内容，所以需要以特殊的方式进行处理。&lt;/p&gt;

</description>
        <pubDate>Thu, 13 Jul 2017 00:00:00 +0800</pubDate>
        <link>https://wowkingah.github.io/2017/07/redis_performance_test/</link>
        <guid isPermaLink="true">https://wowkingah.github.io/2017/07/redis_performance_test/</guid>
        
        <category>Redis</category>
        
        <category>VM</category>
        
        <category>Docker</category>
        
        
      </item>
    
      <item>
        <title>MySQL清理binary日志</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;简述&lt;/h3&gt;
&lt;p&gt;当MySQL开启binary log（二进制日志）后，会产生大量日志文件，时间久了会占用不少磁盘空间。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;解决方案&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;自动清理：expire_logs_days&lt;/li&gt;
    &lt;li&gt;手动清理：PURGE&lt;/li&gt;
    &lt;li&gt;重置日志：RESET&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;section-2&quot;&gt;自动清理&lt;/h4&gt;
&lt;p&gt;自动清理可通过expire_logs_days参数来实现。&lt;br /&gt;
* MySQL中动态修改&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;shell
mysql&amp;gt; SHOW GLOBAL VARIABLES LIKE &#39;expire_logs_days&#39;;  
mysql&amp;gt; SET GLOBAL expire_logs_days =15;  
&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;写入my.cnf配置文件&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;expire_logs_days =15&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-3&quot;&gt;手动清理&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;语法&lt;/strong&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;shell
PURGE {MASTER | BINARY} LOGS TO &#39;binary_log_name&#39;   
PURGE {MASTER | BINARY} LOGS BEFORE &#39;date&#39;   
&lt;/code&gt;
&lt;em&gt;tips: 删除二进制日志索引（index）中指定日志或日期之前的二进制日志。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;实例&lt;/strong&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;shell
mysql&amp;gt; SHOW MASTER LOGS;  
# 15天前  
mysql&amp;gt; PURGE MASTER LOGS BEFORE DATE_SUB(CURRENT_DATE, INTERVAL 15 DAY);  
#删除日志文件到mysql-bin.000152  
mysql&amp;gt; PURGE MASTER LOGS TO &#39;mysql-bin.000152&#39;;   
&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-4&quot;&gt;重置日志&lt;/h4&gt;
&lt;p&gt;高危命令，会清理所有要清理的日志，一般不常用。&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;shell
mysql&amp;gt; RESET MASTER;  
&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 27 Jun 2017 00:00:00 +0800</pubDate>
        <link>https://wowkingah.github.io/2017/06/clean_binary_log_for_mysql/</link>
        <guid isPermaLink="true">https://wowkingah.github.io/2017/06/clean_binary_log_for_mysql/</guid>
        
        <category>MySQL</category>
        
        <category>binary</category>
        
        
      </item>
    
      <item>
        <title>MySQL支持Emoji表情</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;简述&lt;/h3&gt;
&lt;p&gt;MySQL 5.5.3开始通过修改字符集来支持Emoji表情。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;查看当前字符集&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shell
mysql&amp;gt; SHOW VARIABLES WHERE Variable_name LIKE &#39;character\_set\_%&#39; OR Variable_name LIKE &#39;collation%&#39;;
+--------------------------+-----------------+
| Variable_name            | Value           |
+--------------------------+-----------------+
| character_set_client     | utf8            |
| character_set_connection | utf8            |
| character_set_database   | utf8            |
| character_set_filesystem | binary          |
| character_set_results    | utf8            |
| character_set_server     | utf8            |
| character_set_system     | utf8            |
| collation_connection     | utf8_general_ci |
| collation_database       | utf8_general_ci |
| collation_server         | utf8_general_ci |
+--------------------------+-----------------+
10 rows in set (0.01 sec)
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;相关配置&lt;/h3&gt;
&lt;p&gt;#### 修改字符集&lt;br /&gt;
```shell
[root@test ~]# cat /etc/my.cnf
[client]
default_character_set=utf8mb4&lt;/p&gt;

&lt;p&gt;[mysql]
default_character_set=utf8mb4&lt;/p&gt;

&lt;p&gt;[mysqld]
##Character settings
init_connect=’SET NAMES utf8mb4’
character_set_server=utf8mb4
collation_server=utf8mb4_general_ci
skip_character_set_client_handshake
```&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;查看字符集&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shell
mysql&amp;gt; SHOW VARIABLES WHERE Variable_name LIKE &#39;character\_set\_%&#39; OR Variable_name LIKE &#39;collation%&#39;;
+--------------------------+--------------------+
| Variable_name            | Value              |
+--------------------------+--------------------+
| character_set_client     | utf8mb4            |
| character_set_connection | utf8mb4            |
| character_set_database   | utf8mb4            |
| character_set_filesystem | binary             |
| character_set_results    | utf8mb4            |
| character_set_server     | utf8mb4            |
| character_set_system     | utf8               |
| collation_connection     | utf8mb4_general_ci |
| collation_database       | utf8mb4_general_ci |
| collation_server         | utf8mb4_general_ci |
+--------------------------+--------------------+
10 rows in set (0.00 sec)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;已有库表字段修改&lt;/strong&gt;&lt;br /&gt;
对于已有实例、表、字段如果需支持Emoji表情，可按需修改字符集。如果只是某个字段需要，只需修改对应字段的字符集即可。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;修改数据库字符集&lt;/strong&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;shell
ALTER DATABASE database_name CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;修改表的字符集&lt;/strong&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;shell
ALTER TABLE table_name CONVERT TO CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;修改字段的字符集&lt;/strong&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;shell
ALTER TABLE table_name CHANGE column_name column_name VARCHAR(191) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;注意事项&lt;/h3&gt;
&lt;p&gt;如果通过以上配置还不支持Emoji表情，请Connector/J版本或查看sql_mode参数。&lt;/p&gt;

&lt;h4 id=&quot;connector&quot;&gt;Connector&lt;/h4&gt;
&lt;p&gt;connector版本大于5.1.13的不能加characterEncoding=utf8参数（未测试）。&lt;/p&gt;

&lt;h4 id=&quot;sqlmode&quot;&gt;sql_mode&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shell
mysql&amp;gt; show variables like &#39;sql_mode&#39;;
+---------------+----------------------------------------------------------------+
| Variable_name | Value                                                          |
+---------------+----------------------------------------------------------------+
| sql_mode      | STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION |
+---------------+----------------------------------------------------------------+
1 row in set (0.00 sec)
&lt;/code&gt;
若返回结果中带有STRICT_TRANS_TABLES，去掉即可。&lt;br /&gt;
&lt;strong&gt;动态配置&lt;/strong&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;shell
mysql&amp;gt; set global sql_mode = &#39;NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&#39;;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;永久配置&lt;/strong&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;shell
[root@test ~]# cat /etc/my.cnf
[mysqld]
sql_mode=&quot;NO_ENGINE_SUBSTITUTION,NO_AUTO_CREATE_USER&quot;
&lt;/code&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 14 Jun 2017 00:00:00 +0800</pubDate>
        <link>https://wowkingah.github.io/2017/06/mysql_emoji/</link>
        <guid isPermaLink="true">https://wowkingah.github.io/2017/06/mysql_emoji/</guid>
        
        <category>MySQL</category>
        
        
      </item>
    
      <item>
        <title>咖啡与生活</title>
        <description>&lt;p&gt;世界三大饮料：可可、咖啡、茶。奇怪，怎么没有奶茶~_~&lt;br /&gt;
可可，洋货，听闻得少。&lt;br /&gt;
咖啡，咖啡树原产于非洲埃塞俄比亚，当年号称“黑色金子”，只有贵族才能饮用。&lt;br /&gt;
茶，据说是天朝特有饮品，如生活用品一般，几乎在天朝每家每户中成了标配。&lt;/p&gt;

&lt;p&gt;三大饮料，不知不觉中沾了其二：咖啡与茶。论时间顺序应该是茶与咖啡，毕竟大天朝的茶文化要远早于咖啡。&lt;br /&gt;
不知道从什么时候开始，咖啡在我的饮料世界里，占据了一席之位。&lt;br /&gt;
大概是扛砖于某SNS公司期间，在带头大哥Dominic（洋BOSS）的耳濡目染之下，慢慢开始接触。&lt;/p&gt;

&lt;p&gt;此处应该有自拍。&lt;br /&gt;
&lt;img src=&quot;/images/posts/personal/coffee_life/coffee_01.jpg&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;/images/posts/personal/coffee_life/coffee_02.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 06 May 2017 00:00:00 +0800</pubDate>
        <link>https://wowkingah.github.io/2017/05/coffee_and_life/</link>
        <guid isPermaLink="true">https://wowkingah.github.io/2017/05/coffee_and_life/</guid>
        
        <category>coffee</category>
        
        <category>life</category>
        
        
      </item>
    
      <item>
        <title>VMWare安装macOS Sierra 10.12.4</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;简述&lt;/h3&gt;
&lt;p&gt;突然之间又想倒腾一把MacOS，懒得找驱动，于是就在VMWare下开工，听闻10.12.4发布了~_~&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;准备软件&lt;/h3&gt;
&lt;p&gt;#### securable
检测宿主机CPU是否支持虚拟化。
&lt;a href=&quot;https://securable.en.softonic.com&quot;&gt;securable官网&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;unlocker&quot;&gt;unlocker&lt;/h4&gt;
&lt;p&gt;VMWare 默认不支持安装 macOS 虚拟机，可通过 unlocker 来解锁。
&lt;a href=&quot;http://pan.baidu.com/s/1c2hAjPe&quot;&gt;送你去百度云&lt;/a&gt;
密码：r9fr&lt;/p&gt;

&lt;h4 id=&quot;vmware&quot;&gt;VMWare&lt;/h4&gt;
&lt;p&gt;VMware Workstation 12.5 Player 是VMWare Workstation的精简版，重要的是个人免费。
&lt;a href=&quot;http://www.vmware.com/products/player/playerpro-evaluation.html&quot;&gt;VMware官网&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;macos&quot;&gt;MacOS&lt;/h4&gt;
&lt;p&gt;网上清一色都是用的别人定制的虚拟硬盘，不放心，放弃。&lt;br /&gt;
用ISO工具转换原生DMG镜像，试了好几次都成功，也放弃。&lt;br /&gt;
懒得折腾，花了10块大洋买了个CDR(macOS 10.12.4.cdr)~_~ 
&lt;a href=&quot;http://pan.baidu.com/s/1i4Jd3OL&quot;&gt;送你去百度云&lt;/a&gt;
密码：i74b&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;开工&lt;/h3&gt;
&lt;p&gt;#### 1. securable
运行securable，检测CPU是否支持虚拟化。如下图显示，若不为YES，自行解决。
&lt;img src=&quot;/images/posts/sa/install_macos_for_vmware/securable.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;vmware-1&quot;&gt;2. VMWare&lt;/h4&gt;
&lt;p&gt;下载安装VMware Workstation Player，也可以用VMware Workstation，只要你开心。&lt;br /&gt;
这时候VMWare新建虚拟机的时候，操作系统没有MAC OS类型可选，所以需要通过unlocker先解锁。&lt;/p&gt;

&lt;h4 id=&quot;unlocker-1&quot;&gt;3. unlocker&lt;/h4&gt;
&lt;p&gt;3.1. 停止vmware相关服务；
 &amp;gt; a.windows下运行services.msc：
  &lt;img src=&quot;/images/posts/sa/install_macos_for_vmware/services_1.jpg&quot; alt=&quot;&quot; /&gt;
 &amp;gt; b.停止服务：
  &lt;img src=&quot;/images/posts/sa/install_macos_for_vmware/services_2.jpg&quot; alt=&quot;&quot; /&gt;
3.2. 下载unlocker并解压；
3.3. 以管理员身份运行。
 &lt;img src=&quot;/images/posts/sa/install_macos_for_vmware/unlocker.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;4. 新建虚拟机&lt;/h4&gt;
&lt;p&gt;记下图二中虚拟机名称与位置，之后要使用。&lt;br /&gt;
图一
&lt;img src=&quot;/images/posts/sa/install_macos_for_vmware/create_vm_1.jpg&quot; alt=&quot;&quot; /&gt;
图二
&lt;img src=&quot;/images/posts/sa/install_macos_for_vmware/create_vm_2.jpg&quot; alt=&quot;&quot; /&gt;
图三
&lt;img src=&quot;/images/posts/sa/install_macos_for_vmware/create_vm_3.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-4&quot;&gt;5. 启动虚拟机&lt;/h4&gt;
&lt;p&gt;这时候启动虚拟机会报错，如下图：
&lt;img src=&quot;/images/posts/sa/install_macos_for_vmware/start_vm_1.jpg&quot; alt=&quot;&quot; /&gt;
修改虚拟机参数可解决。&lt;br /&gt;
5.1 进入虚拟机文件夹，找到后缀为Mac OS Sierra.vmx的文件（虚拟机文件夹参照新建虚拟机图二；Mac OS Sierra为虚拟机名）：
 &lt;img src=&quot;/images/posts/sa/install_macos_for_vmware/vmx_1.jpg&quot; alt=&quot;&quot; /&gt;
5.2 以记事本打开，在smc.present = “TRUE” 添加一行&lt;code class=&quot;highlighter-rouge&quot;&gt;smc.version = 0&lt;/code&gt;
 &lt;img src=&quot;/images/posts/sa/install_macos_for_vmware/vmx_2.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-5&quot;&gt;6. 又一次启动虚拟机&lt;/h4&gt;
&lt;p&gt;华丽的成功了。
&lt;img src=&quot;/images/posts/sa/install_macos_for_vmware/install_macos_1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-6&quot;&gt;7. 系统安装&lt;/h4&gt;
&lt;p&gt;7.1 实用工具 =&amp;gt; 磁盘工具
 &lt;img src=&quot;/images/posts/sa/install_macos_for_vmware/install_macos_2.jpg&quot; alt=&quot;&quot; /&gt;
7.2 选择虚拟磁盘 =&amp;gt; 抹除
 &lt;img src=&quot;/images/posts/sa/install_macos_for_vmware/install_macos_3.jpg&quot; alt=&quot;&quot; /&gt;
 &lt;img src=&quot;/images/posts/sa/install_macos_for_vmware/install_macos_4.jpg&quot; alt=&quot;&quot; /&gt;
 &lt;img src=&quot;/images/posts/sa/install_macos_for_vmware/install_macos_5.jpg&quot; alt=&quot;&quot; /&gt;
7.3 退出磁盘工具
 &lt;img src=&quot;/images/posts/sa/install_macos_for_vmware/install_macos_6.jpg&quot; alt=&quot;&quot; /&gt;
7.4 选择安装磁盘，然后一路向北
 &lt;img src=&quot;/images/posts/sa/install_macos_for_vmware/install_macos_7.jpg&quot; alt=&quot;&quot; /&gt;
 &lt;img src=&quot;/images/posts/sa/install_macos_for_vmware/install_macos_8.jpg&quot; alt=&quot;&quot; /&gt;
 &lt;img src=&quot;/images/posts/sa/install_macos_for_vmware/install_macos_9.jpg&quot; alt=&quot;&quot; /&gt;
 &lt;img src=&quot;/images/posts/sa/install_macos_for_vmware/install_macos_10.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Fri, 05 May 2017 00:00:00 +0800</pubDate>
        <link>https://wowkingah.github.io/2017/05/install_macos_for_vmware/</link>
        <guid isPermaLink="true">https://wowkingah.github.io/2017/05/install_macos_for_vmware/</guid>
        
        <category>Mac</category>
        
        <category>VMWare</category>
        
        
      </item>
    
      <item>
        <title>Redis Cluster安装部署</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;简述&lt;/h3&gt;
&lt;p&gt;从Redis 3.x开始，一直单机的Redis终于步入Cluster大时代。&lt;br /&gt;
Redis从一个单纯的NoSQL内存数据库变成了分布式NoSQL数据库，CAP模型也从CP变成了AP。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;架构&lt;/h3&gt;
&lt;p&gt;#### 架构图
&lt;img src=&quot;/images/posts/sa/redis_cluster_install/redis_cluster_architecture.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;架构细节&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;所有 redis 结点彼此互联（PING-PONG 机制），内部使用二进制协议优化传输速度和带宽（客户端与结点之间的通信还是正常的ascii协议）；&lt;/li&gt;
    &lt;li&gt;结点的 fail 是通过集群中超过半数的结点检测失效时才生效；&lt;/li&gt;
    &lt;li&gt;客户端与 redis 结点直连，不需要中间 proxy 层；&lt;/li&gt;
    &lt;li&gt;客户端不需要连接集群所有结点，连接集群中任何一个可用结点即可（可用结点）；&lt;/li&gt;
    &lt;li&gt;redis-cluster 把所有的物理结点映射到[0-16383]slot 上，cluster 负责维护 node &amp;lt;-&amp;gt; slot &amp;lt;-&amp;gt; value。&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;section-3&quot;&gt;选举与容错&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/images/posts/sa/redis_cluster_install/fail.jpg&quot; alt=&quot;&quot; /&gt;
##### 选举
&amp;gt;* 选举过程是集群中所有 master 参与，如果半数以上 master 节点与 master 节点通信超过 (cluster-node-timeout)，认为当前 master 节点挂掉；&lt;/p&gt;

&lt;h5 id=&quot;section-4&quot;&gt;容错&lt;/h5&gt;
&lt;p&gt;什么时候整个集群不可用(cluster_state:fail)？
&amp;gt;* 如果集群任意 master 挂掉，且当前 master 没有 slave，集群进入 fail 状态，也可以理解成集群的 slot 映射[0-16383]不完成时进入 fail 状态。
&amp;gt; &amp;gt;* redis-3.0.0.rc1 加入 cluster-require-full-coverage 参数，默认关闭，打开集群兼容部分失败。
&amp;gt;* 如果集群超过半数以上 master 挂掉，无论是否有 slave 集群进入 fail 状态。
&amp;gt; &amp;gt;* 当集群不可用时，所有对集群的操作做都不可用，收到((error) CLUSTERDOWN The cluster is down) 错误。&lt;/p&gt;

&lt;h3 id=&quot;redis&quot;&gt;Redis安装&lt;/h3&gt;
&lt;p&gt;#### 安装redis
Redis&lt;a href=&quot;https://redis.io/download&quot;&gt;官网&lt;/a&gt;下载并安装最新稳定版Redis。&lt;/p&gt;

&lt;h4 id=&quot;redis-cluster&quot;&gt;redis cluster配置&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bash
[root@Wowking-001 ~]# cat /etc/redis/6379.conf |grep -vE &#39;^#|^$&#39;
daemonize yes
pidfile /var/run/redis_6379.pid
port 6379
tcp-backlog 511
timeout 0
tcp-keepalive 0
loglevel notice
logfile /data/logs/redis/redis_6379.log
databases 16
stop-writes-on-bgsave-error yes
rdbcompression no
rdbchecksum no
dbfilename dump.rdb
dir /data/redis/data/6379
slave-serve-stale-data yes
slave-read-only yes
repl-diskless-sync no
repl-diskless-sync-delay 5
repl-disable-tcp-nodelay no
slave-priority 100
appendonly no
appendfilename &quot;appendonly.aof&quot;
appendfsync everysec
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb
aof-load-truncated yes
lua-time-limit 5000
 cluster-enabled yes
 cluster-config-file nodes-6379.conf
 cluster-node-timeout 5000
 cluster-migration-barrier 1
 cluster-require-full-coverage no
slowlog-log-slower-than 10000
slowlog-max-len 128
latency-monitor-threshold 0
notify-keyspace-events &quot;&quot;
hash-max-ziplist-entries 512
hash-max-ziplist-value 64
list-max-ziplist-entries 512
list-max-ziplist-value 64
set-max-intset-entries 512
zset-max-ziplist-entries 128
zset-max-ziplist-value 64
hll-sparse-max-bytes 3000
activerehashing yes
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit slave 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60
hz 10
aof-rewrite-incremental-fsync yes
&lt;/code&gt;
&lt;em&gt;tips&lt;/em&gt;
关闭了持久化。&lt;/p&gt;

&lt;h3 id=&quot;section-5&quot;&gt;系统相关参数调整&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bash
[root@Wowking-001 ~]# cat /etc/sysctl.conf
##Redis
vm.overcommit_memory = 1
net.core.somaxconn = 2048
net.ipv4.tcp_timestamps=1
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_tw_recycle = 1
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_keepalive_time = 1200
net.ipv4.tcp_max_syn_backlog = 8192
net.ipv4.tcp_max_tw_buckets = 5000
net.ipv4.tcp_keepalive_probes = 3
net.ipv4.tcp_keepalive_intvl =15
net.ipv4.tcp_wmem = 8192 131072 16777216
net.ipv4.tcp_rmem = 32768 131072 16777216
[root@Wowking-001 ~]# sysctl -p
[root@Wowking-001 ~]# echo never &amp;gt; /sys/kernel/mm/transparent_hugepage/enabled  #禁用Linux内核特性transparent huge pages，不然日志会报WARNING
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;redis-1&quot;&gt;启动Redis&lt;/h3&gt;
&lt;p&gt;测试使用，在本机启3个不同端口的实例。
&lt;code class=&quot;highlighter-rouge&quot;&gt;bash
[root@Wowking-001 ~]# mkdir -p /data/logs/redis
[root@Wowking-001 ~]# mkdir -p /data/redis/data/6{3,4,5}79
[root@Wowking-001 ~]# redis-server /etc/redis/6379.conf
[root@Wowking-001 ~]# redis-server /etc/redis/6479.conf
[root@Wowking-001 ~]# redis-server /etc/redis/6579.conf
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;cluster&quot;&gt;cluster部署&lt;/h3&gt;
&lt;p&gt;#### 安装ruby及ruby的redis模块
&lt;code class=&quot;highlighter-rouge&quot;&gt;bash
[root@Wowking-001 ~]# yum -y install ruby rubygems
[root@Wowking-001 ~]# gem install redis
&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;cluster-1&quot;&gt;cluster初始化&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bash
[root@Wowking-001 ~]# redis-trib.rb create --replicas 0 192.168.1.1:6379 192.168.1.1:6479 192.168.1.1:6579
&amp;gt;&amp;gt;&amp;gt; Creating cluster
&amp;gt;&amp;gt;&amp;gt; Performing hash slots allocation on 3 nodes...
Using 3 masters:
192.168.1.1:6379
192.168.1.1:6479
192.168.1.1:6579
M: 5d6519a85e2795f0eeb7566031eb6be47c97efbf 192.168.1.1:6379
   slots:0-5460 (5461 slots) master
M: fc82bf9de8adba9886b0cb62ad8a99e8d4495f35 192.168.1.1:6479
   slots:5461-10922 (5462 slots) master
M: 35586851e194755ca82e660010b930987adfde6d 192.168.1.1:6579
   slots:10923-16383 (5461 slots) master
Can I set the above configuration? (type &#39;yes&#39; to accept): yes
&amp;gt;&amp;gt;&amp;gt; Nodes configuration updated
&amp;gt;&amp;gt;&amp;gt; Assign a different config epoch to each node
&amp;gt;&amp;gt;&amp;gt; Sending CLUSTER MEET messages to join the cluster
Waiting for the cluster to join..
&amp;gt;&amp;gt;&amp;gt; Performing Cluster Check (using node 192.168.1.1:6379)
M: 5d6519a85e2795f0eeb7566031eb6be47c97efbf 192.168.1.1:6379
   slots:0-5460 (5461 slots) master
M: fc82bf9de8adba9886b0cb62ad8a99e8d4495f35 192.168.1.1:6479
   slots:5461-10922 (5462 slots) master
M: 35586851e194755ca82e660010b930987adfde6d 192.168.1.1:6579
   slots:10923-16383 (5461 slots) master
[OK] All nodes agree about slots configuration.
&amp;gt;&amp;gt;&amp;gt; Check for open slots...
&amp;gt;&amp;gt;&amp;gt; Check slots coverage...
[OK] All 16384 slots covered.
&lt;/code&gt;
&lt;em&gt;tips&lt;/em&gt;
&amp;gt;* –replicas：指定复本数，这是cluster最小复本要求。推荐2个以上复本，不然没法测试failover。&lt;/p&gt;

&lt;h4 id=&quot;cluster-2&quot;&gt;查看cluster状态&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bash
[root@Wowking-001 ~]# redis-trib.rb check 192.168.1.1:6379
&amp;gt;&amp;gt;&amp;gt; Performing Cluster Check (using node 192.168.1.1:6379)
M: 5d6519a85e2795f0eeb7566031eb6be47c97efbf 192.168.1.1:6379
   slots:0-5460 (5461 slots) master
   0 additional replica(s)
M: 35586851e194755ca82e660010b930987adfde6d 192.168.1.1:6579
   slots:10923-16383 (5461 slots) master
   0 additional replica(s)
M: fc82bf9de8adba9886b0cb62ad8a99e8d4495f35 192.168.1.1:6479
   slots:5461-10922 (5462 slots) master
   0 additional replica(s)
[OK] All nodes agree about slots configuration.
&amp;gt;&amp;gt;&amp;gt; Check for open slots...
&amp;gt;&amp;gt;&amp;gt; Check slots coverage...
[OK] All 16384 slots covered.
&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;cluster-3&quot;&gt;cluster测试&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bash
#任意结点写key
[root@Wowking-001 ~]# redis-cli -p 6379
127.0.0.1:6379&amp;gt; set aa 11
OK
127.0.0.1:6379&amp;gt; get aa
&quot;11&quot;
#任意结点get
[root@Wowking-001 ~]# redis-cli -p 6579 -c
127.0.0.1:6579&amp;gt; get aa
-&amp;gt; Redirected to slot [1180] located at 192.168.1.1:6379
&quot;11&quot;
&lt;/code&gt;
&lt;em&gt;tips&lt;/em&gt;
&amp;gt;* -c：指定cluster模式。&lt;/p&gt;

&lt;h3 id=&quot;reference&quot;&gt;reference&lt;/h3&gt;
&lt;p&gt;https://redis.io/topics/cluster-tutorial &lt;br /&gt;
http://blog.csdn.net/dc_726/article/details/48552531 &lt;br /&gt;
http://www.ttlsa.com/redis/redis-cluster-theoretical-knowledge&lt;/p&gt;

</description>
        <pubDate>Tue, 25 Apr 2017 00:00:00 +0800</pubDate>
        <link>https://wowkingah.github.io/2017/04/redis_cluster_install/</link>
        <guid isPermaLink="true">https://wowkingah.github.io/2017/04/redis_cluster_install/</guid>
        
        <category>Redis</category>
        
        
      </item>
    
      <item>
        <title>Markdown常用语法</title>
        <description>&lt;h3 id=&quot;markdown&quot;&gt;什么是 Markdown&lt;/h3&gt;
&lt;p&gt;Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;标题&lt;/h3&gt;
&lt;p&gt;一级标题：&lt;code class=&quot;highlighter-rouge&quot;&gt;# Header 1&lt;/code&gt;&lt;br /&gt;
二级标题：&lt;code class=&quot;highlighter-rouge&quot;&gt;## Header 2&lt;/code&gt;         &lt;br /&gt;
三级标题：&lt;code class=&quot;highlighter-rouge&quot;&gt;### Header 3&lt;/code&gt;         &lt;br /&gt;
四级标题：&lt;code class=&quot;highlighter-rouge&quot;&gt;#### Header 4&lt;/code&gt;         &lt;br /&gt;
五级标题：&lt;code class=&quot;highlighter-rouge&quot;&gt;##### Header 5&lt;/code&gt;          &lt;br /&gt;
六级标题：&lt;code class=&quot;highlighter-rouge&quot;&gt;###### Header 6&lt;/code&gt;&lt;br /&gt;
&lt;img src=&quot;/images/posts/sa/markdown_syntax/header.jpg&quot; alt=&quot;标题&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;字体&lt;/h3&gt;
&lt;p&gt;斜体：&lt;code class=&quot;highlighter-rouge&quot;&gt;*斜体*&lt;/code&gt;&lt;br /&gt;
粗体：&lt;code class=&quot;highlighter-rouge&quot;&gt;**粗体**&lt;/code&gt;&lt;br /&gt;
粗斜体：&lt;code class=&quot;highlighter-rouge&quot;&gt;***粗斜体***&lt;/code&gt;&lt;br /&gt;
删除线：&lt;code class=&quot;highlighter-rouge&quot;&gt;~~删除线~~&lt;/code&gt;&lt;br /&gt;
&lt;img src=&quot;/images/posts/sa/markdown_syntax/font.jpg&quot; alt=&quot;字体&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;目录&lt;/h3&gt;
&lt;p&gt;在段落中填写 &lt;code class=&quot;highlighter-rouge&quot;&gt;[TOC]&lt;/code&gt; 以显示全文内容的目录结构。
&lt;img src=&quot;/images/posts/sa/markdown_syntax/catalogue.jpg&quot; alt=&quot;目录&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;段与行&lt;/h3&gt;
&lt;p&gt;段落：&lt;code class=&quot;highlighter-rouge&quot;&gt;段落之间空一行&lt;/code&gt;&lt;br /&gt;
换行：&lt;code class=&quot;highlighter-rouge&quot;&gt;一行结束时输入两个空格&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;列表项&lt;/h3&gt;
&lt;p&gt;列表项1：&lt;code class=&quot;highlighter-rouge&quot;&gt;* 列表项1&lt;/code&gt;&lt;br /&gt;
列表项2：&lt;code class=&quot;highlighter-rouge&quot;&gt;* 列表项2&lt;/code&gt;&lt;br /&gt;
列表项3：&lt;code class=&quot;highlighter-rouge&quot;&gt;+ 列表项3&lt;/code&gt;&lt;br /&gt;
列表项4：&lt;code class=&quot;highlighter-rouge&quot;&gt;+ 列表项4&lt;/code&gt;&lt;br /&gt;
列表项5：&lt;code class=&quot;highlighter-rouge&quot;&gt;- 列表项5&lt;/code&gt;&lt;br /&gt;
列表项6：&lt;code class=&quot;highlighter-rouge&quot;&gt;- 列表项6&lt;/code&gt;&lt;br /&gt;
列表项7：&lt;code class=&quot;highlighter-rouge&quot;&gt;1. 列表项7&lt;/code&gt;&lt;br /&gt;
列表项8：&lt;code class=&quot;highlighter-rouge&quot;&gt;2. 列表项8&lt;/code&gt;&lt;br /&gt;
列表项9：&lt;code class=&quot;highlighter-rouge&quot;&gt;- [ ] 列表项9&lt;/code&gt;&lt;br /&gt;
列表项10：&lt;code class=&quot;highlighter-rouge&quot;&gt;- [x] 列表项10&lt;/code&gt;&lt;br /&gt;
&lt;img src=&quot;/images/posts/sa/markdown_syntax/list.jpg&quot; alt=&quot;列表项&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-5&quot;&gt;引用&lt;/h3&gt;
&lt;p&gt;引用：&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt; 引用内容，可结合列表项一起使用&lt;/code&gt;&lt;br /&gt;
&lt;img src=&quot;/images/posts/sa/markdown_syntax/reference.jpg&quot; alt=&quot;引用&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-6&quot;&gt;表格&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;| 项目 | 价格 | 数量 |
| -------- | -----: | :----: |
| 计算机 | 8000 | 10 |
| 手机 | 6000 | 5 |
| 电视 | 3000 | 1 |
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/sa/markdown_syntax/table.jpg&quot; alt=&quot;表格&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-7&quot;&gt;链接与图片&lt;/h3&gt;
&lt;p&gt;链接：&lt;code class=&quot;highlighter-rouge&quot;&gt;[Title](URL)&lt;/code&gt;&lt;br /&gt;
图片：&lt;code class=&quot;highlighter-rouge&quot;&gt;![](/images/image.jpg)&lt;/code&gt;&lt;br /&gt;
&lt;img src=&quot;/images/posts/sa/markdown_syntax/link.jpg&quot; alt=&quot;链接&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-8&quot;&gt;代码高亮&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```python
print &#39;hello world~&#39;
 ```
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/sa/markdown_syntax/code.jpg&quot; alt=&quot;代码&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-9&quot;&gt;水平线&lt;/h3&gt;
&lt;p&gt;水平线：&lt;code class=&quot;highlighter-rouge&quot;&gt;---&lt;/code&gt;&lt;br /&gt;
&lt;img src=&quot;/images/posts/sa/markdown_syntax/horizontal_rules.jpg&quot; alt=&quot;水平线&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-10&quot;&gt;注脚&lt;/h3&gt;
&lt;p&gt;使用 [^keyword] 表示注脚。
这是一个&lt;em&gt;注脚&lt;/em&gt;&lt;sup id=&quot;fnref:footnote&quot;&gt;&lt;a href=&quot;#fn:footnote&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;的样例。&lt;/p&gt;

&lt;h3 id=&quot;section-11&quot;&gt;定义型列表&lt;/h3&gt;

&lt;dl&gt;
  &lt;dt&gt;名词 1&lt;/dt&gt;
  &lt;dd&gt;定义 1（左侧有一个可见的冒号和四个不可见的空格）&lt;/dd&gt;
  &lt;dt&gt;代码块 2&lt;/dt&gt;
  &lt;dd&gt;这是代码块的定义（左侧有一个可见的冒号和四个不可见的空格）

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;代码块（左侧有八个不可见的空格）
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/dd&gt;
&lt;/dl&gt;

&lt;h3 id=&quot;html&quot;&gt;HTML标签&lt;/h3&gt;
&lt;p&gt;支持在 Markdown 语法中嵌套 Html 标签，譬如，你可以用 Html 写一个纵跨两行的表格：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;table&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;th rowspan=&quot;2&quot;&amp;gt;值班人员&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;星期一&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;星期二&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;星期三&amp;lt;/th&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
        &amp;lt;td&amp;gt;李强&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;张明&amp;lt;/td&amp;gt;
        &amp;lt;td&amp;gt;王平&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;table&gt;
    &lt;tr&gt;
        &lt;th rowspan=&quot;2&quot;&gt;值班人员&lt;/th&gt;
        &lt;th&gt;星期一&lt;/th&gt;
        &lt;th&gt;星期二&lt;/th&gt;
        &lt;th&gt;星期三&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;李强&lt;/td&gt;
        &lt;td&gt;张明&lt;/td&gt;
        &lt;td&gt;王平&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;h3 id=&quot;reference&quot;&gt;reference&lt;/h3&gt;
&lt;p&gt;https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:footnote&quot;&gt;
      &lt;p&gt;这是一个 &lt;em&gt;注脚&lt;/em&gt; 的文本。 &lt;a href=&quot;#fnref:footnote&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 23 Apr 2017 00:00:00 +0800</pubDate>
        <link>https://wowkingah.github.io/2017/04/markdown_syntax/</link>
        <guid isPermaLink="true">https://wowkingah.github.io/2017/04/markdown_syntax/</guid>
        
        <category>markdown</category>
        
        
      </item>
    
      <item>
        <title>Sublime Text3编辑markdown文本</title>
        <description>&lt;p&gt;之前一直使用notepad++写SHELL、SQL，有一天想玩玩markdown的时候，觉得不是那么方便。于是，就有了sublime的出现。&lt;/p&gt;

&lt;p&gt;使用sublime编写markdown需要：
&amp;gt; 1. 安装sublime
&amp;gt; 2. 安装markdown相关插件
» * Package Control：用于管理插件
» * MarkdownEditing：编辑markdown&lt;br /&gt;
» * Markdown Preview：预览markdown&lt;/p&gt;

&lt;h3 id=&quot;sublime&quot;&gt;安装sublime&lt;/h3&gt;
&lt;p&gt;Sublime 官网下载并安装(http://www.sublimetext.com/3)&lt;/p&gt;

&lt;h3 id=&quot;package-control&quot;&gt;安装Package Control&lt;/h3&gt;
&lt;p&gt;Package Control官网(https://packagecontrol.io/installation)
#### 安装步骤：
&amp;gt; 1. 使用快捷键&lt;code class=&quot;highlighter-rouge&quot;&gt;ctrl+~&lt;/code&gt; 或通过菜单栏 &lt;code class=&quot;highlighter-rouge&quot;&gt;View &amp;gt; Show Console&lt;/code&gt;调出console。
&amp;gt; 2. 复制官网Python code粘贴到console后按回车去执行。
» * sublime text3选择SUBLIME TEXT3对应的代码
» &lt;code class=&quot;highlighter-rouge&quot;&gt;python
&amp;gt;&amp;gt; import urllib.request,os,hashlib; h = &#39;df21e130d211cfc94d9b0905775a7c0f&#39; + &#39;1e3d39e33b79698005270310898eea76&#39;; pf = &#39;Package Control.sublime-package&#39;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( &#39;http://packagecontrol.io/&#39; + pf.replace(&#39; &#39;, &#39;%20&#39;)).read(); dh = hashlib.sha256(by).hexdigest(); print(&#39;Error validating download (got %s instead of %s), please try manual install&#39; % (dh, h)) if dh != h else open(os.path.join( ipp, pf), &#39;wb&#39; ).write(by)
&amp;gt;&amp;gt;&lt;/code&gt;
&amp;gt; &lt;img src=&quot;/images/posts/sublime_text3/console.jpg&quot; alt=&quot;&quot; /&gt;
&amp;gt; 3. 重启sublime后，可在&lt;code class=&quot;highlighter-rouge&quot;&gt;Preferences -&amp;gt; Package Settings&lt;/code&gt;看到&lt;code class=&quot;highlighter-rouge&quot;&gt;Package Control&lt;/code&gt;。&lt;/p&gt;

&lt;h3 id=&quot;markdowneditingmarkdown-preview&quot;&gt;安装MarkdownEditing与Markdown Preview&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;快捷方式&lt;code class=&quot;highlighter-rouge&quot;&gt;Ctrl + Shift + p&lt;/code&gt;或通过菜单栏&lt;code class=&quot;highlighter-rouge&quot;&gt;Preferences -&amp;gt; Package Control&lt;/code&gt;，输入install
 &lt;img src=&quot;/images/posts/sublime_text3/install_package.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
    &lt;li&gt;安装MarkdownEditing 
 &lt;img src=&quot;/images/posts/sublime_text3/install_MarkdownEditing.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
    &lt;li&gt;安装Markdown Preview
 &lt;img src=&quot;/images/posts/sublime_text3/install_MarkdownPreview.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;section&quot;&gt;偏好设置&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;设置语言平台&lt;/strong&gt;
&amp;gt; 1. 打开Markdown Editing设置
&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Preferences -&amp;gt; Package Settings -&amp;gt; Markdown Editing -&amp;gt; Markdown GFM Settings User&lt;/code&gt;
&amp;gt; 2. 增加配置
&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;
// These settings override both User and Default settings for the Markdown syntax  
{
    &quot;default_line_ending&quot;: &quot;unix&quot;,
}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;sublime相关设置&lt;/strong&gt;
&amp;gt; 1. 打开settings&lt;br /&gt;
&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Preferences -&amp;gt; Settings&lt;/code&gt;
&amp;gt; 2. 增加配置
&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;
&amp;gt; {
&amp;gt;     &quot;font_size&quot;: 12,
&amp;gt;     &quot;line_numbers&quot;: true,
&amp;gt; }  
&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;自定义快捷键，预览markdown&lt;/strong&gt;
&amp;gt; 1. 打开Key Bindings
&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Preferences -&amp;gt; Key Bindings&lt;/code&gt;&lt;br /&gt;
&amp;gt; 2. 增加配置
&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;
&amp;gt; {&quot;keys&quot;: [&quot;f6&quot;], &quot;command&quot;: &quot;markdown_preview&quot;, &quot;args&quot;: { &quot;target&quot;: &quot;browser&quot;}}
&amp;gt;&lt;/code&gt;&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;tips&lt;/em&gt;&lt;/strong&gt;
按F6就可以预览markdown文件啦。&lt;/p&gt;
</description>
        <pubDate>Sat, 22 Apr 2017 00:00:00 +0800</pubDate>
        <link>https://wowkingah.github.io/2017/04/sublime%E7%BC%96%E8%BE%91markdown%E6%96%87%E6%9C%AC/</link>
        <guid isPermaLink="true">https://wowkingah.github.io/2017/04/sublime%E7%BC%96%E8%BE%91markdown%E6%96%87%E6%9C%AC/</guid>
        
        <category>tools</category>
        
        <category>sublime</category>
        
        <category>markdown</category>
        
        
      </item>
    
  </channel>
</rss>
